Motorola DSP56300 Assembler  Version 6.3.22   20-10-27  19:53:09  reverb.asm  Page 1



1                          ;***************************************************************************
2      
1089   
1090                       ;******************************************************************************
1091                       ;===>
1092      0003E8           DELAY     equ     1000
1093      000007           N_SAMPLES equ     7
1094      9.500000E-001    E1        equ     0.95
1095      -2.500000E-001   E2        equ     -0.25
1096                       ;<===
1097   
1098   
1099   
1100      X:000000                   org     x:$0
1101   
1102                       channel_sync
1103      X:000000                   ds      1
1104      000000           Left_ch   equ     0
1105   
1106                       ;===>
1107      X:000400         SAMPLES   dsm     DELAY+1
1108      0007E9           E2_POS    equ     *
1109      X:0007E9                   dc      E2
1110   
1111                       ;<===
1112   
1113      Y:000000                   org     y:$0
1114      000000           E1_POS    equ     *
1115      Y:000000                   dc      E1
1116                       LAST_OUTPUT
1117      Y:000001                   ds      1
1118   
1119   
1120                       ; Control word for CS4218
1121      000300           CTRL_WD_12 equ    MIN_LEFT_ATTN+MIN_RIGHT_ATTN+LIN2+RIN2
1122      000000           CTRL_WD_34 equ    MIN_LEFT_GAIN+MIN_RIGHT_GAIN
1123   
1124   
1125      P:000100                   org     p:$100
1126                       START
1127                       main
1128      P:000100 08F4BD            movep             #$040006,x:M_PCTL       ; PLL 7 X 12.288 = 86.016MHz
                   040006
1129      P:000102 0003F8            ori     #3,mr                             ; mask interrupts
1130      P:000103 0500BB            movec             #0,sp                   ; clear hardware stack pointer
1131      P:000104 0500BA            move              #0,omr                  ; operating mode 0
1132   
1133                       ;==================
1134   
1135      P:000105 240000            move              #0,X0
1136      P:000106 440000            move              X0,x:channel_sync
1137   
1138                       ;========================================
1139      P:000107 0A8420            bset    #M_HGEN,x:M_HPCR                  ; assert HGEN enable GPIO
1140      P:000108 0A8920            bset    #0,x:M_HDDR                       ; set ddr
1141   
Motorola DSP56300 Assembler  Version 6.3.22   20-10-27  19:53:09  reverb.asm  Page 2



1142                       ;========================================
1143      P:000109 0BF080            jsr     ada_init                          ; initialize codec
                   00012D
1144   
1145                       ;===>
1146      P:00010B 05F421            move              #DELAY,m1
                   0003E8
1147      P:00010D 61F400            move              #SAMPLES,r1
                   000400
1148      P:00010F 71F400            move              #DELAY,n1
                   0003E8
1149                       ;               move    #X_TEST,r2
1150                       ;               move    #RESULT,r3
1151      P:000111 340000            move              #E1_POS,r4              ;Cargo la constante E1
1152      P:000112 65F400            move              #E2_POS,r5              ;Cargo la constante E2
                   0007E9
1153      P:000114 360100            move              #LAST_OUTPUT,r6
1154                       ;<===
1155   
1156                       pipe_loop
1157   
1158      P:000115 0C0115            jmp     pipe_loop
1159   
1160   
1161                       right_channel_sr
1162      P:000116 000000            nop
1163      P:000117 00000C            rts
1164   
1165   
1166                       left_channel_sr
1167   
1168                                                                           ; r2 y r3 no se usan
1169                                                                           ; nueva muestra = x0
1170      P:000118 208500            move              x0,x1
1171   
1172      P:000119 C08113            clr     a         x:(r1),x0   y:(r4),y0
1173      P:00011A 2000D0            mpy     y0,x0,a                           ;x:(r2),x0                                           
   ;Multiplico por E1
1174      P:00011B 200060            add     x1,a
1175      P:00011C 000000            nop
1176      P:00011D 000000            nop
1177      P:00011E 000000            nop
1178      P:00011F 21C700            move              a,y1
1179                                                                           ;move   a,x:(r3)+
1180   
1181      P:000120 10A500            move              a,y0        x:(r5),x0   ;Busco E2
1182      P:000121 2000D0            mpy     x0,y0,a                           ;x:(r2)+,x0                                          
   ;Muevo la entrada a x0
1183      P:000122 000000            nop
1184      P:000123 000000            nop
1185      P:000124 000000            nop
1186      P:000125 200060            add     x1,a
1187      P:000126 000000            nop
1188      P:000127 000000            nop
1189      P:000128 000000            nop
1190      P:000129 566900            move              a,x:(r1+n1)             ;La guardo al final del buffer
Motorola DSP56300 Assembler  Version 6.3.22   20-10-27  19:53:09  reverb.asm  Page 3



1191      P:00012A 56D900            move              x:(r1)+,a
1192   
1193      P:00012B 20E400            move              y1,x0
1194   
1195      P:00012C 00000C            rts
1196   
1197                                 include 'ada_init.asm'                    ; used to include codec initialization routines
1198                                 page    132,60
1199                       ;**************************************************************************
1200                       ;       ADA_INIT.ASM    Ver 1.2
1201                       ;       Example program to initialize the CS4218
1202                       ;
1203                       ;       Copyright (c) MOTOROLA 1995, 1996, 1997, 1998
1204                       ;                     Semiconductor Products Sector
1205                       ;                     Wireless Signal Processing Division
1206                       ;
1207                       ;       History:
1208                       ;                       14 June 1996:  RLR/LJD - ver 1.0
1209                       ;                       21 July 1997:  BEA     - ver 1.1
1210                       ;                               23 Sept 1998:  TTL     - ver 1.2
1211                       ;                                       24 Dec  2010:  Andres
1212                       ;**************************************************************************
1213      X:0007EA                   org     x:
1214   
1215                       ; Codec control constants
1216      X:0007EA         CTRL_WD_HI ds     1
1217      X:0007EB         CTRL_WD_LO ds     1
1218   
1219   
1220                       ; GPIO  pin constants
1221   
1222                                                                           ; ESSI0 - audio data GPIO mode
1223                                                                           ; DSP                   CODEC
1224                                                                           ; ---------------------------
1225                       CODEC_RESET
1226      000000                     equ     0                                 ; bit0  SC00    --->    CODEC_RESET~
1227   
1228                                                                           ; ESSI1 - control data GPIO Mode
1229                                                                           ; DSP                   CODEC
1230                                                                           ;----------------------------
1231      000000           CCS       equ     0                                 ; bit0  SC10    --->    CCS~
1232      000001           CCLK      equ     1                                 ; bit1  SC11    --->    CCLK
1233      000002           CDIN      equ     2                                 ; bit2  SC12    --->    CDIN
1234   
1235                       ;**************************************************************************
1236                       ; Initialize the CS4218 codec
1237                       ; ---------------------------
1238                       ; Serial Mode 4 (SM4), DSP Slave/Codec Master, 32-bits per frame
1239                       ;
1240                       ; After a reset, the control port must be written once to initialize it
1241                       ; if the port will be accessed to read or write control bits.  The initial
1242                       ; write is a "dummy" write since the data is ignored by the codec.  A second
1243                       ; write is needed to configure the codec as desired.  Then, the control port
1244                       ; only needs to be written to when a change is desired, or to obtain status
1245                       ; information.
1246                       ;
Motorola DSP56300 Assembler  Version 6.3.22   20-10-27  19:53:09  ada_init.asm  Page 4



1247                       ; Although only 23 bits contain useful data in CDIN, a minimum of 31 bits
1248                       ; must be written.
1249                       ;
1250                       ; CDIN
1251                       ;------------------------------------------------
1252                       ; bit 31                0
1253                       ;------------------------------------------------
1254                       ; bit 30                mask interrupt
1255                       ;                       0=no mask on MF5:\INT pin
1256                       ;                       1=mask on MF5:\INT pin
1257                       ;------------------------------------------------
1258                       ; bit 29                DO1
1259                       ;------------------------------------------------
1260                       ; bits 28-24            left output D/A sttenuation  (1.5dB steps)
1261                       ;                       00000=No attenuation 0dB
1262                       ;                       11111=Max attenuation -46.5dB
1263                       ;------------------------------------------------
1264                       ; bits 23-19            right output D/A attenuation (1.5dB steps)
1265                       ;                       00000=No attenuation 0dB
1266                       ;                       11111=Max attenuation -46.5dB
1267                       ;------------------------------------------------
1268                       ; bit 18                mute D/A outputs
1269                       ;                       0=outputs ON
1270                       ;                       1=outputs MUTED
1271                       ;------------------------------------------------
1272                       ; bit 17                input mux, left select
1273                       ;                       0=RIN1
1274                       ;                       1=RIN2 (used on EVM)
1275                       ;------------------------------------------------
1276                       ; bit 16                input mux, right select
1277                       ;                       0=LIN1
1278                       ;                       1=LIN2 (used on EVM)
1279                       ;------------------------------------------------
1280                       ; bits 15-12            left input A/D gain (1.5dB steps)
1281                       ;                       0000=No gain 0dB
1282                       ;                       1111=Max gain +22.5dB
1283                       ;------------------------------------------------
1284                       ; bits 11-8             right input A/D gain (1.5dB steps)
1285                       ;                       0000=No gain 0dB
1286                       ;                       1111=Max gain +22.5dB
1287                       ;------------------------------------------------
1288                       ; bits 7-0              00000000
1289                       ;------------------------------------------------
1290                       ;**************************************************************************
1291   
1292   
1293      P:00012D                   org     p:
1294                       ada_init
1295   
1296                                                                           ; reset ESSI ports
1297      P:00012D 07F43F            movep             #$0000,x:M_PCRC         ; reset ESSI0 port
                   000000
1298      P:00012F 07F42F            movep             #$0000,x:M_PCRD         ; reset ESSI1 port
                   000000
1299   
1300                                                                           ; Set Control Register A and B
Motorola DSP56300 Assembler  Version 6.3.22   20-10-27  19:53:09  ada_init.asm  Page 5



1301      P:000131 07F435            movep             #$101807,x:M_CRA0       ; 12.288MHz/16 = 768KHz SCLK
                   101807
1302                                                                           ; prescale modulus = 8
1303                                                                           ; frame rate divider = 2
1304                                                                           ; 16-bits per word
1305                                                                           ; 32-bits per frame
1306                                                                           ; 16-bit data aligned to bit 23
1307   
1308      P:000133 07F436            movep             #$2b330c,x:M_CRB0       ; Disable REIE,TEIE,TLIE,TIE
                   2B330C
1309                                                                           ; Enable RLIE,RIE,RE,TE0
1310                                                                           ; network mode, synchronous,
1311                                                                           ; out on rising/in on falling
1312                                                                           ; shift MSB first
1313                                                                           ; external clock source drives SCK
1314                                                                           ; (codec is master)
1315                                                                           ; RX frame sync pulses active for
1316                                                                           ; 1 bit clock immediately before
1317                                                                           ; transfer period
1318                                                                           ; positive frame sync polarity
1319                                                                           ; frame sync length is 1-bit
1320   
1321                                                                           ; Configure GPIO pins -- (functionality and direction
)
1322      P:000135 07F43F            movep             #$0000,x:M_PCRC         ; Enable GPIO pin 0 SC00=CODEC_RESET
                   000000
1323      P:000137 07F42F            movep             #$0000,x:M_PCRD         ; Enable GPIO CSS (pin 0),CCLK (pin 1), CDIN (pin 2)
                   000000
1324   
1325      P:000139 07F43E            movep             #$0001,x:M_PRRC         ; set PC0=CODEC_RESET~ as output
                   000001
1326      P:00013B 07F42E            movep             #$0007,x:M_PRRD         ; set PD0=CCS~ as output
                   000007
1327                                                                           ; set PD1=CCLK as output
1328                                                                           ; set PD2=CDIN as output
1329   
1330                       ; Codec Reset
1331      P:00013D 013D00            bclr    #CODEC_RESET,x:M_PDRC             ; assert CODEC_RESET~
1332      P:00013E 012D00            bclr    #CCS,x:M_PDRD                     ; assert CCS~ -- allows control register to be writte
n to
1333   
1334                                                                           ; Delay to allow Codec to reset
1335      P:00013F 06E883            do      #1000,_delay_loop
                   000142
1336      P:000141 06E8A3            rep     #1000                             ; minimum 50 ms delay
1337      P:000142 000000            nop
1338                       _delay_loop
1339   
1340   
1341                       ; Setting up to send Codec control information
1342      P:000143 013D20            bset    #CODEC_RESET,x:M_PDRC             ; deassert CODEC_RESET~
1343   
1344   
1345                                                                           ; Sending control words
1346                       set_control
1347      P:000144 44F400            move              #CTRL_WD_12,x0          ; transfer control value to control variable
Motorola DSP56300 Assembler  Version 6.3.22   20-10-27  19:53:09  ada_init.asm  Page 6



                   000300
1348      P:000146 447000            move              x0,x:CTRL_WD_HI
                   0007EA
1349      P:000148 240000            move              #CTRL_WD_34,x0
1350      P:000149 447000            move              x0,x:CTRL_WD_LO
                   0007EB
1351      P:00014B 0BF080            jsr     codec_control                     ; send in dummy control information
                   000155
1352      P:00014D 0BF080            jsr     codec_control                     ; send in correct control information
                   000155
1353   
1354   
1355                                                                           ; Set and enable interrupts
1356      P:00014F 08F4BE            movep             #$000c,x:M_IPRP         ; set interrupt priority level for ESSI0 to 3
                   00000C
1357      P:000151 00FCB8            andi    #$fc,mr                           ; enable interrupts
1358   
1359                                                                           ; Set ESSI functionality
1360      P:000152 07F43F            movep             #$003e,x:M_PCRC         ; enable ESSI0 except SC00=CODEC_RESET
                   00003E
1361   
1362      P:000154 00000C            rts
1363   
1364   
1365                       ;-------------------------------------------------------------
1366                       ; codec_control routine
1367                       ;       Input:  CTRL_WD_LO and CTRL_WD_HI
1368                       ;       Output: CDIN
1369                       ;       Description: Used to send control information to CODEC
1370                       ;       NOTE: does not preserve the 'a' register.
1371                       ;-------------------------------------------------------------
1372                       codec_control
1373      P:000155 200013            clr     a
1374      P:000156 012D00            bclr    #CCS,x:M_PDRD                     ; assert CCS
1375      P:000157 54F000            move              x:CTRL_WD_HI,a1         ; upper 16 bits of control data
                   0007EA
1376      P:000159 0BF080            jsr     send_codec                        ; shift out upper control word
                   000161
1377      P:00015B 54F000            move              x:CTRL_WD_LO,a1         ; lower 16 bits of control data
                   0007EB
1378      P:00015D 0BF080            jsr     send_codec                        ; shift out lower control word
                   000161
1379      P:00015F 012D20            bset    #CCS,x:M_PDRD                     ; deassert CCS
1380      P:000160 00000C            rts
1381   
1382   
1383                       ;---------------------------------------------------------------
1384                       ; send_codec routine
1385                       ;       Input:  a1 containing control information
1386                       ;       Output: sends bits to CDIN
1387                       ;       Description: Determines bits to send to CDIN
1388                       ;---------------------------------------------------------------
1389   
1390                       send_codec
1391      P:000161 061080            do      #16,end_send_codec                ; 16 bits per word
                   00016D
Motorola DSP56300 Assembler  Version 6.3.22   20-10-27  19:53:09  ada_init.asm  Page 7



1392      P:000163 012D21            bset    #CCLK,x:M_PDRD                    ; toggle CCLK clock high
1393      P:000164 0ACC17            jclr    #23,a1,bit_low                    ; test msb
                   000169
1394      P:000166 012D22            bset    #CDIN,x:M_PDRD                    ; send high into CDIN
1395      P:000167 0AF080            jmp     continue
                   00016A
1396                       bit_low
1397      P:000169 012D02            bclr    #CDIN,x:M_PDRD                    ; send low into CDIN
1398                       continue
1399      P:00016A 0602A0            rep     #2                                ; delay
1400      P:00016B 000000            nop
1401      P:00016C 012D01            bclr    #CCLK,x:M_PDRD                    ; restart cycle
1402      P:00016D 200033            lsl     a                                 ; shift control word to 1 bit
1403                                                                           ; to left
1404                       end_send_codec
1405      P:00016E 00000C            rts
1406   
1407   
1408                                 include 'interrupts.asm'                  ; ISRs
1409                       ;****************************************************************************
1410                       ;       SSI0_ISR.ASM    Ver.2.0
1411                       ;       Example program to handle interrupts through
1412                       ;       the 56307 SSI0 to move audio through the CS4218
1413                       ;
1414                       ;       Copyright (c) MOTOROLA 1995, 1996, 1997, 1998
1415                       ;                     Semiconductor Products Sector
1416                       ;                     Digital Signal Processing Division
1417                       ;
1418                       ;
1419                       ;       History:
1420                       ;                       14 June 1996: RLR/LJD - ver 1.0
1421                       ;                       23 July 1997: BEA     - ver 1.1
1422                       ;                       1  june 2001: Dany
1423                       ;                       24 Dec  2010: Andres
1424                       ;Notes Host interface signals have a weak keeper to maintain the last state
1425                       ;      even if all drivers are tri-stated
1426                       ;      In order to measure Host interface pin states  H0-H7
1427                       ;      use a 1K pulldown resistor. Dany 29 sep 2020
1428                       ;
1429                       ;******************************************************************************
1430   
1431   
1432                       ;----the actual interrupt service routines (ISRs)  follow:
1433   
1434                       ;************************ SSI TRANSMIT ISR *********************************
1435                       ssi_txe_isr
1436      P:00016F 013704            bclr    #4,x:M_SSISR0                     ; Read SSISR to clear exception flag
1437                                                                           ; explicitly clears underrun flag
1438                       ssi_tx_isr
1439   
1440      P:000170 000004            rti
1441   
1442   
1443   
1444                       ;********************* SSI TRANSMIT LAST SLOT ISR **************************
1445                       ssi_txls_isr
Motorola DSP56300 Assembler  Version 6.3.22   20-10-27  19:53:09  interrupts.asm  Page 8



1446      P:000171 000004            rti
1447   
1448                       ;************************** SSI receive ISR ********************************
1449                       ssi_rxe_isr
1450      P:000172 013705            bclr    #5,x:M_SSISR0                     ; Read SSISR to clear exception flag
1451                                                                           ; explicitly clears overrun flag
1452                       ssi_rx_isr
1453      P:000173 0A8820            bset    #0,x:M_HDR
1454   
1455      P:000174 0444D8            movep             x:M_RX0,x0              ; Read a/d data
1456      P:000175 0C8080            brclr   #Left_ch,X:channel_sync,right_ch
                   000006
1457   
1458                       left_ch
1459                                                                           ; process left channel
1460      P:000177 0B0000            bchg    #Left_ch,X:channel_sync
1461      P:000178 0D0118            jsr     left_channel_sr
1462   
1463      P:000179 0D10C0            bra     endisr
                   000004
1464   
1465                       right_ch
1466                                                                           ; process right channel
1467      P:00017B 0B0000            bchg    #Left_ch,X:channel_sync
1468      P:00017C 0D0116            jsr     right_channel_sr
1469   
1470      P:00017D 04C4DC  endisr    movep             x0,x:M_TX00             ; Write d/a
1471   
1472      P:00017E 0A8800            bclr    #0,x:M_HDR
1473      P:00017F 000004            rti
1474   
1475   
1476   
1477                       ;********************** SSI receive last slot ISR **************************
1478                       ssi_rxls_isr
1479      P:000180 0A0020            bset    #Left_ch,x:channel_sync
1480      P:000181 000004            rti
1481   
1482                                 end

0    Errors
0    Warnings


